{"version":3,"sources":["TodoItem.js","todosData.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","props","className","type","checked","item","completed","onChange","handleChange","id","text","todosData","App","state","todos","bind","this","setState","prevState","updatedTodos","map","todo","console","log","todoItems","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAeeA,MAbf,SAAkBC,GAChB,OACE,sBAAKC,UAAU,YAAf,UACE,uBACEC,KAAK,WACLC,QAASH,EAAMI,KAAKC,UACpBC,SAAU,kBAAMN,EAAMO,aAAaP,EAAMI,KAAKI,OAEhD,4BAAIR,EAAMI,KAAKK,WCkBNC,EA5BG,CAChB,CACEF,GAAI,EACJC,KAAM,gBACNJ,WAAW,GAEb,CACEG,GAAI,EACJC,KAAM,qBACNJ,WAAW,GAEb,CACEG,GAAI,EACJC,KAAM,kBACNJ,WAAW,GAEb,CACEG,GAAI,EACJC,KAAM,iCACNJ,WAAW,GAEb,CACEG,GAAI,EACJC,KAAM,cACNJ,WAAW,ICkBAM,E,kDApCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,MAAOH,GAET,EAAKH,aAAe,EAAKA,aAAaO,KAAlB,gBALR,E,gDAQd,SAAaN,GACXO,KAAKC,UAAS,SAACC,GACb,IAAMC,EAAeD,EAAUJ,MAAMM,KAAI,SAACC,GACxC,OAAIA,EAAKZ,KAAOA,EACP,2BACFY,GADL,IAEEf,WAAYe,EAAKf,YAGde,KAIT,OAFAC,QAAQC,IAAIL,EAAUJ,OACtBQ,QAAQC,IAAIJ,GACL,CACLL,MAAOK,Q,oBAKb,WAAU,IAAD,OACDK,EAAYR,KAAKH,MAAMC,MAAMM,KAAI,SAACf,GAAD,OACrC,cAAC,EAAD,CAAwBA,KAAMA,EAAMG,aAAc,EAAKA,cAAxCH,EAAKI,OAGtB,OAAO,qBAAKP,UAAU,YAAf,SAA4BsB,Q,GAjCrBC,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.263c9ceb.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction TodoItem(props) {\n  return (\n    <div className=\"todo-item\">\n      <input\n        type=\"checkbox\"\n        checked={props.item.completed}\n        onChange={() => props.handleChange(props.item.id)}\n      />\n      <p>{props.item.text}</p>\n    </div>\n  );\n}\n\nexport default TodoItem;\n","const todosData = [\n  {\n    id: 1,\n    text: \"Make a coffee\",\n    completed: true,\n  },\n  {\n    id: 2,\n    text: \"Code, code & code!\",\n    completed: true,\n  },\n  {\n    id: 3,\n    text: \"Train Muay Thai\",\n    completed: false,\n  },\n  {\n    id: 4,\n    text: \"Order chicken & prawn pad thai\",\n    completed: true,\n  },\n  {\n    id: 5,\n    text: \"Watch anime\",\n    completed: false,\n  },\n];\n\nexport default todosData;\n","import React from \"react\";\nimport \"./App.css\";\nimport TodoItem from \"./TodoItem\";\nimport todosData from \"./todosData\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      todos: todosData,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(id) {\n    this.setState((prevState) => {\n      const updatedTodos = prevState.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n        return todo;\n      });\n      console.log(prevState.todos);\n      console.log(updatedTodos);\n      return {\n        todos: updatedTodos,\n      };\n    });\n  }\n\n  render() {\n    const todoItems = this.state.todos.map((item) => (\n      <TodoItem key={item.id} item={item} handleChange={this.handleChange} />\n    ));\n\n    return <div className=\"todo-list\">{todoItems}</div>;\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}